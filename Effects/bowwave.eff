<?xml version="1.0" encoding="utf-8"?>
<PropertyList>
	<name>Effects/bowwave</name>
	<inherits-from>Effects/model-default</inherits-from>
	<parameters>
		<texture n="0">
			<image>/Textures/Water/water-reflection.png</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<texture n="2">
			<image>/Textures/Water/perlin-noise-nm.dds</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<texture n="3">
			<image>/Textures/Water/waves-ver10-dudv.dds</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<texture n="4">
			<image>/Textures/Water/water-reflection-grey.png</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<texture n="5">
			<image>/Textures/Water/sea_foam.dds</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<texture n="6">
			<image>/Textures/Water/bowwave3.dds</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<texture n="7">
			<image>/Textures/Water/bowwave_normal.dds</image>
			<type>2d</type>
			<filter>linear-mipmap-linear</filter>
			<wrap-s>repeat</wrap-s>
			<wrap-t>repeat</wrap-t>
			<internal-format>normalized</internal-format>
		</texture>
		<saturation>
			<use>/rendering/scene/saturation</use>
		</saturation>
		<status>
			<use>/environment/config/enabled</use>
		</status>
		<overcast>
			<use>/rendering/scene/overcast</use>
		</overcast>
		<cloud-cover0>
			<use>/environment/clouds/layer[0]/coverage-type</use>
		</cloud-cover0>
		<cloud-cover1>
			<use>/environment/clouds/layer[1]/coverage-type</use>
		</cloud-cover1>
		<cloud-cover2>
			<use>/environment/clouds/layer[2]/coverage-type</use>
		</cloud-cover2>
		<cloud-cover3>
			<use>/environment/clouds/layer[3]/coverage-type</use>
		</cloud-cover3>
		<cloud-cover4>
			<use>/environment/clouds/layer[4]/coverage-type</use>
		</cloud-cover4>
		<windE>
			<use>/environment/sea/surface/wind-from-east-fps</use>
		</windE>
		<windN>
			<use>/environment/sea/surface/wind-from-north-fps</use>
		</windN>
		<speed-kt>
			<use>/environment/Vinson/spd-kt</use>
		</speed-kt>
		<heading-deg>
			<use>/environment/Vinson/hdg-deg</use>
		</heading-deg>
		<shade-model>smooth</shade-model>
		<rendering-hint>transparent</rendering-hint>
		<transparent>true</transparent>
		<render-bin>
			<bin-number type="int">6</bin-number>
			<bin-name>DepthSortedBin</bin-name>
		</render-bin>

		<!-- 	fog include -->
		<visibility>
			<use>/environment/ground-visibility-m</use>
		</visibility>
		<avisibility>
			<use>/environment/visibility-m</use>
		</avisibility>
		<lthickness>
			<use>/environment/ground-haze-thickness-m</use>
		</lthickness>
		<scattering>
			<use>/rendering/scene/scattering</use>
		</scattering>
		<ground_scattering>
			<use>/environment/surface/scattering</use>
		</ground_scattering>
		<terminator>
			<use>/environment/terminator-relative-position-m</use>
		</terminator>
		<terrain_alt>
			<use>/environment/mean-terrain-elevation-m</use>
		</terrain_alt>
		<overcast>
			<use>/rendering/scene/overcast</use>
		</overcast>
		<eye_alt>
			<use>/sim/rendering/eye-altitude-m</use>
		</eye_alt>
		<cloud_self_shading>
			<use>/environment/cloud-self-shading</use>
		</cloud_self_shading>
    		<moonlight>
			<use>/environment/moonlight</use>
		</moonlight>
		<fogtype>
			<use>/sim/rendering/shaders/skydome</use>
		</fogtype>
		<quality_level>
			<use>/sim/rendering/shaders/landmass</use>
		</quality_level>
		<!-- sea colors -->
		<sea_r>
			<use>/environment/sea/color_r</use>
		</sea_r>
		<sea_g>
			<use>/environment/sea/color_g</use>
		</sea_g>
		<sea_b>
			<use>/environment/sea/color_b</use>
		</sea_b>
		<!-- 	END fog include -->
	</parameters>

<technique n="5">
		<predicate>
			<and>
			    <property>/sim/rendering/shaders/skydome</property>
				<property>/sim/rendering/shaders/quality-level</property>
				<property>/sim/rendering/shaders/water</property>
				<less-equal>
					<value type="float">2.0</value>
					<float-property>/sim/rendering/shaders/water</float-property>
				</less-equal>
				<or>
					<less-equal>
						<value type="float">2.0</value>
						<glversion/>
					</less-equal>
					<and>
						<extension-supported>GL_ARB_shader_objects</extension-supported>
						<extension-supported>GL_ARB_shading_language_100</extension-supported>
						<extension-supported>GL_ARB_vertex_shader</extension-supported>
						<extension-supported>GL_ARB_fragment_shader</extension-supported>
					</and>
				</or>
			</and>
		</predicate>
		<pass>
			<lighting>true</lighting>
			<material>
				<active>
					<use>material/active</use>
				</active>
				<ambient>
					<use>material/ambient</use>
				</ambient>
				<diffuse>
					<use>material/diffuse</use>
				</diffuse>
				<specular>
					<use>material/specular</use>
				</specular>
				<emissive>
					<use>material/emissive</use>
				</emissive>
				<shininess>
					<use>material/shininess</use>
				</shininess>
				<color-mode>
					<use>material/color-mode</use>
				</color-mode>
			</material>
			<blend>
				<active>
					<use>blend/active</use>
				</active>
				<source>
					<use>blend/source</use>
				</source>
				<destination>
					<use>blend/destination</use>
				</destination>
			</blend>
			<shade-model>
				<use>shade-model</use>
			</shade-model>
			<cull-face>
				<use>cull-face</use>
			</cull-face>
			<rendering-hint>
				<use>rendering-hint</use>
			</rendering-hint>
			<texture-unit>
				<unit>0</unit>
				<image>
					<use>texture[0]/image</use>
				</image>
                <type>
                    <use>texture[0]/type</use>
                </type>
				<filter>
					<use>texture[0]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[0]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[0]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[0]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>1</unit>
				<type>noise</type>
			</texture-unit>
			<texture-unit>
				<unit>2</unit>
				<image>
					<use>texture[2]/image</use>
				</image>
                <type>
                    <use>texture[2]/type</use>
                </type>
				<filter>
					<use>texture[2]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[2]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[2]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[2]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>3</unit>
				<image>
					<use>texture[3]/image</use>
				</image>
                <type>
                    <use>texture[3]/type</use>
                </type>
				<filter>
					<use>texture[3]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[3]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[3]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[3]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>4</unit>
				<image>
					<use>texture[4]/image</use>
				</image>
                <type>
                    <use>texture[4]/type</use>
                </type>
				<filter>
					<use>texture[4]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[4]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[4]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[4]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>5</unit>
				<image>
					<use>texture[5]/image</use>
				</image>
                <type>
                    <use>texture[5]/type</use>
                </type>
				<filter>
					<use>texture[5]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[5]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[5]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[5]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>6</unit>
				<image>
					<use>texture[6]/image</use>
				</image>
                <type>
                    <use>texture[6]/type</use>
                </type>
				<filter>
					<use>texture[6]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[6]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[6]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[6]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>7</unit>
				<image>
					<use>texture[7]/image</use>
				</image>
                <type>
                    <use>texture[7]/type</use>
                </type>
				<filter>
					<use>texture[7]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[7]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[7]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[7]/internal-format</use>
				</internal-format>
			</texture-unit>

			<program>
<!-- 				<vertex-shader>Shaders/include_fog.vert</vertex-shader> -->
				<vertex-shader>Shaders/wake-ALS.vert</vertex-shader>
				<!--<fragment-shader>Shaders/include_fog.frag</fragment-shader>-->
				<fragment-shader>Shaders/bowwave-ALS.frag</fragment-shader>
				<fragment-shader>Shaders/hazes.frag</fragment-shader>
			</program>
			<uniform>
				<name>water_reflection</name>
				<type>sampler-2d</type>
				<value type="int">0</value>
			</uniform>
			<uniform>
				<name>water_normalmap</name>
				<type>sampler-2d</type>
				<value type="int">2</value>
			</uniform>
			<uniform>
				<name>water_dudvmap</name>
				<type>sampler-2d</type>
				<value type="int">3</value>
			</uniform>
			<uniform>
				<name>water_reflection_grey</name>
				<type>sampler-2d</type>
				<value type="int">4</value>
			</uniform>
			<uniform>
				<name>sea_foam</name>
				<type>sampler-2d</type>
				<value type="int">5</value>
			</uniform>
			<uniform>
				<name>alpha_tex</name>
				<type>sampler-2d</type>
				<value type="int">6</value>
			</uniform>
			<uniform>
				<name>bowwave_nmap</name>
				<type>sampler-2d</type>
				<value type="int">7</value>
			</uniform>
			<uniform>
				<name>saturation</name>
				<type>float</type>
				<!--<value>0.4</value>-->
				<value>
					<use>saturation</use>
				</value>
			</uniform>
			<uniform>
				<name>Status</name>
				<type>int</type>
				<value>
					<use>status</use>
				</value>
				<!--<value type="int">0</value> -->
			</uniform>
			<uniform>
				<name>Overcast</name>
				<type>float</type>
				<value>
					<use>overcast</use>
				</value>
			</uniform>
			<uniform>
				<name>WindE</name>
				<type>float</type>
				<value>
					<use>windE</use>
				</value>
			</uniform>
			<uniform>
				<name>WindN</name>
				<type>float</type>
				<value>
					<use>windN</use>
				</value>
			</uniform>
			<uniform>
				<name>spd</name>
				<type>float</type>
				<value><use>speed-kt</use></value>
			</uniform>
			<uniform>
				<name>hdg</name>
				<type>float</type>
				<value>
					<use>heading-deg</use>
				</value>
			</uniform>
			<uniform>
				<name>Noise</name>
				<type>sampler-3d</type>
				<value type="int">1</value>
			</uniform>

			<!-- 	    BEGIN fog include -->
			<uniform>
				<name>visibility</name>
				<type>float</type>
				<value>
					<use>visibility</use>
				</value>
			</uniform>
			<uniform>
				<name>avisibility</name>
				<type>float</type>
				<value>
					<use>avisibility</use>
				</value>
			</uniform>
			<uniform>
				<name>hazeLayerAltitude</name>
				<type>float</type>
				<value>
					<use>lthickness</use>
				</value>
			</uniform>
			<uniform>
				<name>scattering</name>
				<type>float</type>
				<value>
					<use>scattering</use>
				</value>
			</uniform>
			<uniform>
				<name>ground_scattering</name>
				<type>float</type>
				<value>
					<use>ground_scattering</use>
				</value>
			</uniform>
			<uniform>
				<name>terminator</name>
				<type>float</type>
				<value>
					<use>terminator</use>
				</value>
			</uniform>
			<uniform>
				<name>terrain_alt</name>
				<type>float</type>
				<value>
					<use>terrain_alt</use>
				</value>
			</uniform>
			<uniform>
				<name>overcast</name>
				<type>float</type>
				<value>
					<use>overcast</use>
				</value>
			</uniform>
			<uniform>
				<name>eye_alt</name>
				<type>float</type>
				<value>
					<use>eye_alt</use>
				</value>
			</uniform>
 			<uniform>
        	<name>cloud_self_shading</name>
        		<type>float</type>
        		<value><use>cloud_self_shading</use></value>
      		</uniform>

			<!-- sea colors -->
			<uniform>
				<name>sea_r</name>
				<type>float</type>
				<value>
					<use>sea_r</use>
				</value>
			</uniform>
			<uniform>
				<name>sea_g</name>
				<type>float</type>
				<value>
					<use>sea_g</use>
				</value>
			</uniform>
			<uniform>
				<name>sea_b</name>
				<type>float</type>
				<value>
					<use>sea_b</use>
				</value>
			</uniform>
			<uniform>
				<name>quality_level</name>
				<type>int</type>
				<value><use>quality_level</use></value>
			</uniform>
			<!-- 			END fog include -->
		</pass>
	</technique>

	<technique n="9">
		<predicate>
			<and>
				<property>/sim/rendering/shaders/quality-level</property>
				<property>/sim/rendering/shaders/water</property>
				<less-equal>
					<value type="float">2.0</value>
					<float-property>/sim/rendering/shaders/water</float-property>
				</less-equal>
				<or>
					<less-equal>
						<value type="float">2.0</value>
						<glversion/>
					</less-equal>
					<and>
						<extension-supported>GL_ARB_shader_objects</extension-supported>
						<extension-supported>GL_ARB_shading_language_100</extension-supported>
						<extension-supported>GL_ARB_vertex_shader</extension-supported>
						<extension-supported>GL_ARB_fragment_shader</extension-supported>
					</and>
				</or>
			</and>
		</predicate>
		<pass>
			<lighting>true</lighting>
			<material>
				<active>
					<use>material/active</use>
				</active>
				<ambient>
					<use>material/ambient</use>
				</ambient>
				<diffuse>
					<use>material/diffuse</use>
				</diffuse>
				<specular>
					<use>material/specular</use>
				</specular>
				<emissive>
					<use>material/emissive</use>
				</emissive>
				<shininess>
					<use>material/shininess</use>
				</shininess>
				<color-mode>
					<use>material/color-mode</use>
				</color-mode>
			</material>
			<blend>
				<active>
					<use>blend/active</use>
				</active>
				<source>
					<use>blend/source</use>
				</source>
				<destination>
					<use>blend/destination</use>
				</destination>
			</blend>
			<shade-model>
				<use>shade-model</use>
			</shade-model>
			<cull-face>
				<use>cull-face</use>
			</cull-face>
			<rendering-hint>
				<use>rendering-hint</use>
			</rendering-hint>
			<texture-unit>
				<unit>0</unit>
				<image>
					<use>texture[0]/image</use>
				</image>
                <type>
                    <use>texture[0]/type</use>
                </type>
				<filter>
					<use>texture[0]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[0]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[0]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[0]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>1</unit>
				<type>noise</type>
			</texture-unit>
			<texture-unit>
				<unit>2</unit>
				<image>
					<use>texture[2]/image</use>
				</image>
                <type>
                    <use>texture[2]/type</use>
                </type>
				<filter>
					<use>texture[2]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[2]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[2]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[2]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>3</unit>
				<image>
					<use>texture[3]/image</use>
				</image>
                <type>
                    <use>texture[3]/type</use>
                </type>
				<filter>
					<use>texture[3]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[3]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[3]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[3]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>4</unit>
				<image>
					<use>texture[4]/image</use>
				</image>
                <type>
                    <use>texture[4]/type</use>
                </type>
				<filter>
					<use>texture[4]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[4]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[4]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[4]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>5</unit>
				<image>
					<use>texture[5]/image</use>
				</image>
                <type>
                    <use>texture[5]/type</use>
                </type>
				<filter>
					<use>texture[5]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[5]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[5]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[5]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>6</unit>
				<image>
					<use>texture[6]/image</use>
				</image>
                <type>
                    <use>texture[6]/type</use>
                </type>
				<filter>
					<use>texture[6]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[6]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[6]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[6]/internal-format</use>
				</internal-format>
			</texture-unit>
			<texture-unit>
				<unit>7</unit>
				<image>
					<use>texture[7]/image</use>
				</image>
                <type>
                    <use>texture[7]/type</use>
                </type>
				<filter>
					<use>texture[7]/filter</use>
				</filter>
				<wrap-s>
					<use>texture[7]/wrap-s</use>
				</wrap-s>
				<wrap-t>
					<use>texture[7]/wrap-t</use>
				</wrap-t>
				<internal-format>
					<use>texture[7]/internal-format</use>
				</internal-format>
			</texture-unit>

			<program>
<!-- 				<vertex-shader>Shaders/include_fog.vert</vertex-shader> -->
				<vertex-shader>Shaders/wake.vert</vertex-shader>
				<fragment-shader>Shaders/include_fog.frag</fragment-shader>
				<fragment-shader>Shaders/bowwave.frag</fragment-shader>
			</program>
			<uniform>
				<name>water_reflection</name>
				<type>sampler-2d</type>
				<value type="int">0</value>
			</uniform>
			<uniform>
				<name>water_normalmap</name>
				<type>sampler-2d</type>
				<value type="int">2</value>
			</uniform>
			<uniform>
				<name>water_dudvmap</name>
				<type>sampler-2d</type>
				<value type="int">3</value>
			</uniform>
			<uniform>
				<name>water_reflection_grey</name>
				<type>sampler-2d</type>
				<value type="int">4</value>
			</uniform>
			<uniform>
				<name>sea_foam</name>
				<type>sampler-2d</type>
				<value type="int">5</value>
			</uniform>
			<uniform>
				<name>alpha_tex</name>
				<type>sampler-2d</type>
				<value type="int">6</value>
			</uniform>
			<uniform>
				<name>bowwave_nmap</name>
				<type>sampler-2d</type>
				<value type="int">7</value>
			</uniform>
			<uniform>
				<name>saturation</name>
				<type>float</type>
				<!--<value>0.4</value>-->
				<value>
					<use>saturation</use>
				</value>
			</uniform>
			<uniform>
				<name>CloudCover0</name>
				<type>float</type>
				<value>
					<use>cloud-cover0</use>
				</value>
			</uniform>
			<uniform>
				<name>CloudCover1</name>
				<type>float</type>
				<value>
					<use>cloud-cover1</use>
				</value>
			</uniform>
			<uniform>
				<name>CloudCover2</name>
				<type>float</type>
				<value>
					<use>cloud-cover2</use>
				</value>
			</uniform>
			<uniform>
				<name>CloudCover3</name>
				<type>float</type>
				<value>
					<use>cloud-cover3</use>
				</value>
			</uniform>
			<uniform>
				<name>CloudCover4</name>
				<type>float</type>
				<value>
					<use>cloud-cover4</use>
				</value>
			</uniform>
			<uniform>
				<name>Status</name>
				<type>int</type>
				<value>
					<use>status</use>
				</value>
				<!--<value type="int">0</value> -->
			</uniform>
			<uniform>
				<name>Overcast</name>
				<type>float</type>
				<value>
					<use>overcast</use>
				</value>
			</uniform>
			<uniform>
				<name>WindE</name>
				<type>float</type>
				<value>
					<use>windE</use>
				</value>
			</uniform>
			<uniform>
				<name>WindN</name>
				<type>float</type>
				<value>
					<use>windN</use>
				</value>
			</uniform>
			<uniform>
				<name>spd</name>
				<type>float</type>
				<value><use>speed-kt</use></value>
			</uniform>
			<uniform>
				<name>hdg</name>
				<type>float</type>
				<value>
					<use>heading-deg</use>
				</value>
			</uniform>
			<uniform>
				<name>Noise</name>
				<type>sampler-3d</type>
				<value type="int">1</value>
			</uniform>

			<!-- 	    BEGIN fog include -->
			<uniform>
				<name>visibility</name>
				<type>float</type>
				<value>
					<use>visibility</use>
				</value>
			</uniform>
			<uniform>
				<name>avisibility</name>
				<type>float</type>
				<value>
					<use>avisibility</use>
				</value>
			</uniform>
			<uniform>
				<name>hazeLayerAltitude</name>
				<type>float</type>
				<value>
					<use>lthickness</use>
				</value>
			</uniform>
			<uniform>
				<name>scattering</name>
				<type>float</type>
				<value>
					<use>scattering</use>
				</value>
			</uniform>
			<uniform>
				<name>terminator</name>
				<type>float</type>
				<value>
					<use>terminator</use>
				</value>
			</uniform>
			<uniform>
				<name>fogType</name>
				<type>int</type>
				<value>
					<use>fogtype</use>
				</value>
			</uniform>
			<!-- 			END fog include -->
		</pass>
	</technique>
	<technique n="11"> <!-- FIXME: this technique number overlaps the one in model-default -->
		<predicate>
			<and>
				<property>/sim/rendering/shaders/quality-level</property>
				<property>/sim/rendering/shaders/water</property>
				<or>
					<less-equal>
						<value type="float">2.0</value>
						<glversion/>
					</less-equal>
					<and>
						<extension-supported>GL_ARB_shader_objects</extension-supported>
						<extension-supported>GL_ARB_shading_language_100</extension-supported>
						<extension-supported>GL_ARB_vertex_shader</extension-supported>
						<extension-supported>GL_ARB_fragment_shader</extension-supported>
					</and>
				</or>
			</and>
		</predicate>
		<pass>
			<lighting>true</lighting>
			<material>
				<ambient>
					<use>material/ambient</use>
				</ambient>
				<diffuse>
					<use>material/diffuse</use>
				</diffuse>
				<specular>
					<use>material/specular</use>
				</specular>
				<color-mode>ambient-and-diffuse</color-mode>
			</material>
			<blend>
				<use>transparent</use>
			</blend>
			<alpha-test>
				<use>transparent</use>
			</alpha-test>
			<shade-model>smooth</shade-model>
			<cull-face>back</cull-face>
			<render-bin>
				<bin-number>
					<use>render-bin/bin-number</use>
				</bin-number>
				<bin-name>
					<use>render-bin/bin-name</use>
				</bin-name>
			</render-bin>
			<texture-unit>
				<unit>0</unit>
				<type>noise</type>
			</texture-unit>
			<program>
				<vertex-shader>Shaders/water-orig.vert</vertex-shader>
				<fragment-shader>Shaders/water-orig.frag</fragment-shader>
			</program>
			<uniform>
				<name>texture</name>
				<type>sampler-3d</type>
				<value type="int">0</value>
			</uniform>
		</pass>
	</technique>
</PropertyList>
